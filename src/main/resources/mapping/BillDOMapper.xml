<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zaozao.dao.BillDOMapper">
    <resultMap id="BaseResultMap" type="com.zaozao.dataobject.BillDO">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 10 15:00:21 CST 2019.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="student_name" jdbcType="VARCHAR" property="studentName"/>
        <result column="isv_id" jdbcType="INTEGER" property="isvId"/>
        <result column="school_id" jdbcType="INTEGER" property="schoolId"/>
        <result column="school_name" jdbcType="VARCHAR" property="schoolName"/>
        <result column="class_id" jdbcType="INTEGER" property="classId"/>
        <result column="grade_num" jdbcType="INTEGER" property="gradeNum"/>
        <result column="class_num" jdbcType="INTEGER" property="classNum"/>
        <result column="student_id" jdbcType="INTEGER" property="studentId"/>
        <result column="student_identity" jdbcType="VARCHAR" property="studentIdentity"/>
        <result column="student_no" jdbcType="VARCHAR" property="studentNo"/>
        <result column="bill_name" jdbcType="VARCHAR" property="billName"/>
        <result column="bill_item_id" jdbcType="INTEGER" property="billItemId"/>
        <result column="bill_amount" jdbcType="DOUBLE" property="billAmount"/>
        <result column="bill_status" jdbcType="TINYINT" property="billStatus"/>
        <result column="syn_status" jdbcType="TINYINT" property="synStatus"/>
        <result column="pay_type" jdbcType="TINYINT" property="payType"/>
        <result column="serial_num" jdbcType="VARCHAR" property="serialNum"/>
        <result column="bill_num" jdbcType="VARCHAR" property="billNum"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="pay_date" jdbcType="TIMESTAMP" property="payDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="delete_status" jdbcType="VARCHAR" property="deleteStatus"/>
        <result column="wechat_open_id" jdbcType="VARCHAR" property="wechatOpenId"/>
        <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo"/>
    </resultMap>
    <resultMap id="AmountTypeMap" type="com.zaozao.dataobject.BillAmountPayDO">
        <result column="bill_amount" jdbcType="DOUBLE" property="billAmount"/>
        <result column="pay_type" jdbcType="TINYINT" property="payType"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 10 15:00:21 CST 2019.
        -->
        id,student_name, isv_id,school_id, school_name, class_id, grade_num, class_num, student_id,
        student_identity,student_no,bill_name, bill_item_id,bill_amount, bill_status,syn_status, pay_type,
        serial_num,bill_num, create_date, pay_date,update_date,end_date,comment,delete_status,wechat_open_id,
        out_trade_no
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 10 15:00:21 CST 2019.
        -->
        select
        <include refid="Base_Column_List"/>
        from bill
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryKeyList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where id in
        <foreach collection="idList" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="listBillBySchoolAndClassAndStudentNo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where school_id = #{schoolId,jdbcType=INTEGER} and class_id = #{classId,jdbcType=INTEGER} and student_no =
        #{studentNo,jdbcType=VARCHAR} and bill_status=#{billStatus,jdbcType=INTEGER} and delete_status =
        #{deleteStatus,jdbcType=VARCHAR}
    </select>
    <select id="listBillBySchoolAndClass" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where school_id = #{schoolId,jdbcType=INTEGER} and class_id = #{classId,jdbcType=INTEGER} and delete_status =
        #{deleteStatus,jdbcType=VARCHAR}
        order by student_no
    </select>
    <select id="listBill" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill where delete_status = #{deleteStatus,jdbcType=VARCHAR}
        order by school_id and class_id
    </select>
    <select id="listBillLike" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill where delete_status like #{deleteStatus,jdbcType=VARCHAR}
        # order by school_id and class_id
    </select>
    <select id="listBillBySchoolIdList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where delete_status = #{deleteStatus,jdbcType=VARCHAR} and school_id in
        <foreach collection="schoolIdList" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        order by student_no and class_id
    </select>
    <select id="listBillBySchoolIdListLike" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where delete_status like #{deleteStatus,jdbcType=VARCHAR} and school_id in
        <foreach collection="schoolIdList" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        # order by student_no and class_id
    </select>
    <select id="listBillBySchoolId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where school_id = #{schoolId,jdbcType=INTEGER} and delete_status = #{deleteStatus,jdbcType=VARCHAR}
        order by class_id and student_no
    </select>
    <select id="listBillBySchoolIdLike" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where school_id = #{schoolId,jdbcType=INTEGER} and delete_status like #{deleteStatus,jdbcType=VARCHAR}
        # order by class_id and student_no
    </select>
    <select id="selectByClassIdList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill where delete_status = #{deleteStatus,jdbcType=VARCHAR} and class_id in
        <foreach collection="classIdList" index="index" item="classId" open="(" separator="," close=")">
            #{classId}
        </foreach>
    </select>
    <select id="listBillByStudentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where student_id = #{studentId,jdbcType=INTEGER} and delete_status = #{deleteStatus,jdbcType=VARCHAR} and
        bill_status = #{billStatus,jdbcType=TINYINT}
    </select>
    <select id="listBillByOpenIdAndBillStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where wechat_open_id = #{openId,jdbcType=VARCHAR} and bill_status = #{billStatus,jdbcType=TINYINT}
    </select>
    <select id="listBillByOutTradeNo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where out_trade_no = #{outTradeNo,jdbcType=VARCHAR} and delete_status = #{deleteStatus,jdbcType=VARCHAR}
    </select>
    <select id="selectAmountByStudentAndBillAndItem" resultType="java.lang.Integer">
        select count(*)
        from bill
        where student_no = #{studentNo,jdbcType=VARCHAR}
          and bill_name = #{billName,jdbcType=VARCHAR}
          and bill_item_id = #{billItemId,jdbcType=INTEGER}
          and delete_status = #{deleteStatus,jdbcType=VARCHAR}
    </select>
    <select id="getByStudentAndBillAndItem" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where student_no = #{studentNo,jdbcType=VARCHAR} and bill_name = #{billName,jdbcType=VARCHAR}
        and bill_item_id = #{billItemId,jdbcType=INTEGER} and delete_status = #{deleteStatus,jdbcType=VARCHAR}
    </select>
    <select id="selectAmountByStudentId" resultType="java.lang.Integer">
        select count(*)
        from bill
        where student_id = #{studentId,jdbcType=INTEGER}
          and delete_status = #{deleteStatus,jdbcType=VARCHAR}
    </select>
    <select id="countBillAmountDynamic" parameterType="java.util.Map" resultType="java.lang.Double">
        select cast(COALESCE(SUM(bill_amount),0) as decimal(10,2)) from bill
        where delete_status = #{deleteStatus,jdbcType=VARCHAR}
        <if test="billStatus != null">
            and
            bill_status = #{billStatus,jdbcType=TINYINT}
        </if>
        <if test="schoolIdList != null and schoolIdList.size()>0 ">
            and school_id in
            <foreach collection="schoolIdList" index="index" item="schoolId" open="(" separator="," close=")">
                #{schoolId}
            </foreach>
        </if>
        <if test="billItemId != null and billItemId >0 ">
            and
            bill_item_id = #{billItemId,jdbcType=INTEGER}
        </if>
    </select>
    <select id="countBillAmountByPayType" parameterType="java.util.Map" resultMap="AmountTypeMap">
        select cast(COALESCE(SUM(bill_amount),0) as decimal(10,2)) bill_amount,pay_type from bill
        where bill_status = #{billStatus,jdbcType=TINYINT}
        <if test="isvId != null">
            and
            isv_id = #{isvId,jdbcType=INTEGER}
        </if>
        <if test="schoolId != null">
            and school_id =#{schoolId}
        </if>
        group by pay_type
    </select>

    <select id="listBillByDynamicQuery" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bill
        where delete_status = #{deleteStatus,jdbcType=VARCHAR}
        <if test="schoolId != null and schoolId != '' ">
            and
            school_id = #{schoolId,jdbcType=INTEGER}
        </if>
        <if test="gradeNum != null and gradeNum != '' ">
            and
            grade_num = #{gradeNum,jdbcType=INTEGER}
        </if>
        <if test="classNum != null and classNum != '' ">
            and
            class_num = #{classNum,jdbcType=VARCHAR}
        </if>
        <if test="studentNo != null and studentNo != '' ">
            and
            student_no = #{studentNo,jdbcType=VARCHAR}
        </if>
        <if test="studentName != null and studentName != '' ">
            and
            student_name = #{studentName,jdbcType=VARCHAR}
        </if>
        <if test="createDate != null and createDate != '' ">
            and
            date_format(create_date,'%Y-%m-%d') = #{createDate,jdbcType=VARCHAR}
        </if>
        <if test="payDate != null and payDate != '' ">
            and
            date_format(pay_date,'%Y-%m-%d') = #{payDate,jdbcType=VARCHAR}
        </if>
        <if test="billNum != null and billNum != '' ">
            and
            bill_num = #{billNum,jdbcType=VARCHAR}
        </if>
        <if test="payType != null">
            and
            pay_type = #{payType,jdbcType=TINYINT}
        </if>
        <if test="billStatus != null">
            and
            bill_status = #{billStatus,jdbcType=TINYINT}
        </if>
        <if test="synStatus != null">
            and
            syn_status = #{synStatus,jdbcType=TINYINT}
        </if>
        <if test="billName != null and billName != '' ">
            and
            bill_name = #{billName,jdbcType=VARCHAR}
        </if>
        <if test="billItemId != null and billItemId >0 ">
            and
            bill_item_id = #{billItemId,jdbcType=INTEGER}
        </if>
        order by school_id and class_id
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 10 15:00:21 CST 2019.
        -->
        delete from bill
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteBySchoolId" parameterType="java.lang.Integer">
        delete
        from bill
        where school_id = #{schoolId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.zaozao.dataobject.BillDO" keyProperty="id" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 10 15:00:21 CST 2019.
        -->
        insert into bill (id,student_name, isv_id,school_id, school_name, class_id, grade_num, class_num,
        student_id, student_identity,student_no,bill_name, bill_item_id,bill_amount, bill_status,syn_status,
        pay_type,serial_num,bill_num,
        create_date, pay_date,update_date,end_date,comment,delete_status,wechat_open_id,out_trade_no) values
        (#{id,jdbcType=INTEGER},#{studentName,jdbcType=VARCHAR},#{isvId,jdbcType=INTEGER},#{schoolId,jdbcType=INTEGER},
        #{schoolName,jdbcType=VARCHAR},#{classId,jdbcType=INTEGER},#{gradeNum,jdbcType=INTEGER},
        #{classNum,jdbcType=INTEGER},#{studentId,jdbcType=INTEGER},#{studentIdentity,jdbcType=VARCHAR},
        #{studentNo,jdbcType=VARCHAR},#{billName,jdbcType=VARCHAR},#{billItemId,jdbcType=INTEGER},#{billAmount,jdbcType=DOUBLE},
        #{billStatus,jdbcType=TINYINT},#{synStatus,jdbcType=TINYINT},#{payType,jdbcType=TINYINT},#{serialNum,jdbcType=VARCHAR},
        #{billNum,jdbcType=VARCHAR},#{createDate,jdbcType=TIMESTAMP},#{payDate,jdbcType=TIMESTAMP},
        #{updateDate,jdbcType=TIMESTAMP},#{endDate,jdbcType=TIMESTAMP},#{comment,jdbcType=VARCHAR},#{deleteStatus,jdbcType=VARCHAR},
        #{wechatOpenId,jdbcType=VARCHAR},#{outTradeNo,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.zaozao.dataobject.BillDO" keyProperty="id" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 10 15:00:21 CST 2019.
        -->
        insert into bill
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="studentName != null">
                student_name,
            </if>
            <if test="schoolId != null">
                school_id,
            </if>
            <if test="isvId != null">
                isv_id,
            </if>
            <if test="schoolName != null">
                school_name,
            </if>
            <if test="classId != null">
                class_id,
            </if>
            <if test="gradeNum != null">
                grade_num,
            </if>
            <if test="classNum != null">
                class_num,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="studentIdentity != null">
                student_identity,
            </if>
            <if test="studentNo != null">
                student_no,
            </if>
            <if test="billName != null">
                bill_name,
            </if>
            <if test="billItemId != null">
                bill_item_id,
            </if>
            <if test="billAmount != null">
                bill_amount,
            </if>
            <if test="billStatus != null">
                bill_status,
            </if>
            <if test="synStatus != null">
                syn_status,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="serialNum != null">
                serial_num,
            </if>
            <if test="billNum != null">
                bill_num,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="payDate != null">
                pay_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            <if test="comment != null">
                comment,
            </if>
            <if test="deleteStatus != null">
                delete_status,
            </if>
            <if test="wechatOpenId != null">
                wechat_open_id,
            </if>
            <if test="outTradeNo != null">
                out_trade_no,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="studentName != null">
                #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="isvId != null">
                #{isvId,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="schoolName != null">
                #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="classId != null">
                #{classId,jdbcType=INTEGER},
            </if>
            <if test="gradeNum != null">
                #{gradeNum,jdbcType=INTEGER},
            </if>
            <if test="classNum != null">
                #{classNum,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=INTEGER},
            </if>
            <if test="studentIdentity != null">
                #{studentIdentity,jdbcType=VARCHAR},
            </if>
            <if test="studentNo != null">
                #{studentNo,jdbcType=VARCHAR},
            </if>
            <if test="billName != null">
                #{billName,jdbcType=VARCHAR},
            </if>
            <if test="billItemId != null">
                #{billItemId,jdbcType=INTEGER},
            </if>
            <if test="billAmount != null">
                #{billAmount,jdbcType=DOUBLE},
            </if>
            <if test="billStatus != null">
                #{billStatus,jdbcType=TINYINT},
            </if>
            <if test="synStatus != null">
                #{synStatus,jdbcType=TINYINT},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=TINYINT},
            </if>
            <if test="serialNum != null">
                #{serialNum,jdbcType=VARCHAR},
            </if>
            <if test="billNum != null">
                #{billNum,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="payDate != null">
                #{payDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=TIMESTAMP},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=VARCHAR},
            </if>
            <if test="deleteStatus != null">
                #{deleteStatus,jdbcType=VARCHAR},
            </if>
            <if test="wechatOpenId != null">
                #{wechatOpenId,jdbcType=VARCHAR},
            </if>
            <if test="outTradeNo != null">
                #{outTradeNo,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zaozao.dataobject.BillDO">
        update bill
        <set>
            <if test="studentName != null">
                student_name = #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="isvId != null">
                isv_id = #{isvId,jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId,jdbcType=INTEGER},
            </if>
            <if test="schoolName != null">
                school_name = #{schoolName,jdbcType=VARCHAR},
            </if>
            <if test="classId != null">
                class_id = #{classId,jdbcType=INTEGER},
            </if>
            <if test="gradeNum != null">
                grade_num = #{gradeNum,jdbcType=INTEGER},
            </if>
            <if test="classNum != null">
                class_num = #{classNum,jdbcType=INTEGER},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=INTEGER},
            </if>
            <if test="studentIdentity != null">
                student_identity = #{studentIdentity,jdbcType=VARCHAR},
            </if>
            <if test="studentNo != null">
                student_no = #{studentNo,jdbcType=VARCHAR},
            </if>
            <if test="billName != null">
                bill_name = #{billName,jdbcType=VARCHAR},
            </if>
            <if test="billItemId != null">
                bill_item_id = #{billItemId,jdbcType=INTEGER},
            </if>
            <if test="billAmount != null">
                bill_amount = #{billAmount,jdbcType=DOUBLE},
            </if>
            <if test="billStatus != null">
                bill_status = #{billStatus,jdbcType=TINYINT},
            </if>
            <if test="synStatus != null">
                syn_status = #{synStatus,jdbcType=TINYINT},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=TINYINT},
            </if>
            <if test="serialNum != null">
                serial_num = #{serialNum,jdbcType=VARCHAR},
            </if>
            <if test="billNum != null">
                bill_num = #{billNum,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="payDate != null">
                pay_date = #{payDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="endDate != null">
                end_date = #{endDate,jdbcType=TIMESTAMP},
            </if>
            <if test="comment != null">
                comment = #{comment,jdbcType=VARCHAR},
            </if>
            <if test="deleteStatus != null">
                delete_status = #{deleteStatus,jdbcType=VARCHAR},
            </if>
            <if test="wechatOpenId != null">
                wechat_open_id = #{wechatOpenId,jdbcType=VARCHAR},
            </if>
            <if test="outTradeNo != null">
                out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zaozao.dataobject.BillDO">
        update bill
        set student_name     = #{studentName,jdbcType=VARCHAR},
            isv_id           = #{isvId,jdbcType=INTEGER},
            school_id        = #{schoolId,jdbcType=INTEGER},
            school_name      = #{schoolName,jdbcType=VARCHAR},
            class_id         = #{classId,jdbcType=INTEGER},
            grade_num        = #{gradeNum,jdbcType=INTEGER},
            class_num        = #{classNum,jdbcType=INTEGER},
            student_id       = #{studentId,jdbcType=INTEGER},
            student_identity = #{studentIdentity,jdbcType=VARCHAR},
            student_no       = #{studentNo,jdbcType=VARCHAR},
            bill_name        = #{billName,jdbcType=VARCHAR},
            bill_item_id     = #{billItemId,jdbcType=INTEGER},
            bill_amount      = #{billAmount,jdbcType=DOUBLE},
            bill_status      = #{billStatus,jdbcType=TINYINT},
            syn_status       = #{synStatus,jdbcType=TINYINT},
            pay_type         = #{payType,jdbcType=TINYINT},
            serial_num       = #{serialNum,jdbcType=VARCHAR},
            bill_num         = #{billNum,jdbcType=VARCHAR},
            create_date      = #{createDate,jdbcType=TIMESTAMP},
            pay_date         = #{payDate,jdbcType=TIMESTAMP},
            update_date      = #{updateDate,jdbcType=TIMESTAMP},
            end_date         = #{endDate,jdbcType=TIMESTAMP},
            comment          = #{comment,jdbcType=VARCHAR},
            delete_status    = #{deleteStatus,jdbcType=VARCHAR},
            wechat_open_id   = #{wechatOpenId,jdbcType=VARCHAR},
            out_trade_no     = #{outTradeNo,jdbcType=VARCHAR},
            where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
